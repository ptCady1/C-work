// <auto-generated />
using DataTransfer.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataTransfer.Migrations
{
    [DbContext(typeof(CountryContext))]
    [Migration("20250304235436_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataTransfer.Models.Country", b =>
                {
                    b.Property<string>("countryID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("countryID");

                    b.HasIndex("GamesID");

                    b.HasIndex("SportTypeID");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            countryID = "can",
                            Flag = "Flag_of_Canada.png",
                            GamesID = "win",
                            SportTypeID = "cu-in",
                            countryName = "Canada"
                        },
                        new
                        {
                            countryID = "aus",
                            Flag = "Flag_of_Austria.png",
                            GamesID = "para",
                            SportTypeID = "can-ou",
                            countryName = "Austria"
                        },
                        new
                        {
                            countryID = "bra",
                            Flag = "Flag_of_Brazil.png",
                            GamesID = "sum",
                            SportTypeID = "ro-ou",
                            countryName = "Brazil"
                        },
                        new
                        {
                            countryID = "cyp",
                            Flag = "Flag_of_Cyprus.png",
                            GamesID = "youth",
                            SportTypeID = "bre-in",
                            countryName = "Cyprus"
                        },
                        new
                        {
                            countryID = "fra",
                            Flag = "Flag_of_France.png",
                            GamesID = "youth",
                            SportTypeID = "bre-in",
                            countryName = "France"
                        },
                        new
                        {
                            countryID = "fin",
                            Flag = "Flag_of_Finland.png",
                            GamesID = "youth",
                            SportTypeID = "ska-ou",
                            countryName = "Finland"
                        },
                        new
                        {
                            countryID = "slo",
                            Flag = "Flag_of_Slovakia.png",
                            GamesID = "youth",
                            SportTypeID = "ska-ou",
                            countryName = "Slovakia"
                        },
                        new
                        {
                            countryID = "por",
                            Flag = "Flag_of_Portugal.png",
                            GamesID = "youth",
                            SportTypeID = "ska-ou",
                            countryName = "Portugal"
                        },
                        new
                        {
                            countryID = "ger",
                            Flag = "Flag_of_Germany.png",
                            GamesID = "sum",
                            SportTypeID = "di-in",
                            countryName = "Germany"
                        },
                        new
                        {
                            countryID = "jam",
                            Flag = "Flag_of_Jamaica.png",
                            GamesID = "win",
                            SportTypeID = "bob-ou",
                            countryName = "Jamaica"
                        },
                        new
                        {
                            countryID = "mex",
                            Flag = "Flag_of_Mexico.png",
                            GamesID = "sum",
                            SportTypeID = "di-in",
                            countryName = "Mexico"
                        },
                        new
                        {
                            countryID = "pak",
                            Flag = "Flag_of_Pakistan.png",
                            GamesID = "para",
                            SportTypeID = "can-ou",
                            countryName = "Pakistan"
                        },
                        new
                        {
                            countryID = "rus",
                            Flag = "Flag_of_Russia.png",
                            GamesID = "youth",
                            SportTypeID = "bre-in",
                            countryName = "Russia"
                        },
                        new
                        {
                            countryID = "thai",
                            Flag = "Flag_of_Thailand.png",
                            GamesID = "para",
                            SportTypeID = "ar-in",
                            countryName = "Thailand"
                        },
                        new
                        {
                            countryID = "net",
                            Flag = "Flag_of_the_Netherlands.png",
                            GamesID = "sum",
                            SportTypeID = "cy-ou",
                            countryName = "Netherland"
                        },
                        new
                        {
                            countryID = "chi",
                            Flag = "Flag_of_the_People's_Republic_of_China.png",
                            GamesID = "sum",
                            SportTypeID = "di-in",
                            countryName = "China"
                        },
                        new
                        {
                            countryID = "bri",
                            Flag = "Flag_of_the_United_Kingdom.png",
                            GamesID = "win",
                            SportTypeID = "cu-in",
                            countryName = "United Kingdom"
                        },
                        new
                        {
                            countryID = "usa",
                            Flag = "Flag_of_the_United_States.png",
                            GamesID = "sum",
                            SportTypeID = "ro-ou",
                            countryName = "United States"
                        },
                        new
                        {
                            countryID = "ukr",
                            Flag = "Flag_of_Ukraine.png",
                            GamesID = "para",
                            SportTypeID = "ar-in",
                            countryName = "Ukrain"
                        },
                        new
                        {
                            countryID = "uru",
                            Flag = "Flag_of_Uruguay.png",
                            GamesID = "para",
                            SportTypeID = "ar-in",
                            countryName = "Urugauy"
                        },
                        new
                        {
                            countryID = "zim",
                            Flag = "Flag_of_Zimbabwe.png",
                            GamesID = "para",
                            SportTypeID = "can-ou",
                            countryName = "Zimbabwe"
                        },
                        new
                        {
                            countryID = "ita",
                            Flag = "Italy.png",
                            GamesID = "win",
                            SportTypeID = "bob-ou",
                            countryName = "Italy"
                        },
                        new
                        {
                            countryID = "jap",
                            Flag = "Japan.png",
                            GamesID = "win",
                            SportTypeID = "bob-ou",
                            countryName = "Japan"
                        },
                        new
                        {
                            countryID = "swe",
                            Flag = "Sweden.png",
                            GamesID = "win",
                            SportTypeID = "cu-in",
                            countryName = "Sweden"
                        });
                });

            modelBuilder.Entity("DataTransfer.Models.Games", b =>
                {
                    b.Property<string>("GamesID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GamesID");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GamesID = "win",
                            Name = "winter"
                        },
                        new
                        {
                            GamesID = "sum",
                            Name = "summer"
                        },
                        new
                        {
                            GamesID = "para",
                            Name = "para"
                        },
                        new
                        {
                            GamesID = "youth",
                            Name = "youth"
                        });
                });

            modelBuilder.Entity("DataTransfer.Models.SportType", b =>
                {
                    b.Property<string>("SportTypeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SportTypeID");

                    b.ToTable("SportsTypes");

                    b.HasData(
                        new
                        {
                            SportTypeID = "cu-in",
                            SportName = "Curling/Indoor"
                        },
                        new
                        {
                            SportTypeID = "bob-ou",
                            SportName = "Bobsleigh/Outdoor"
                        },
                        new
                        {
                            SportTypeID = "di-in",
                            SportName = "Diving/Indoor"
                        },
                        new
                        {
                            SportTypeID = "ro-ou",
                            SportName = "Road Cycling/Outdoor"
                        },
                        new
                        {
                            SportTypeID = "cy-ou",
                            SportName = "Cycling/Outdoor"
                        },
                        new
                        {
                            SportTypeID = "ar-in",
                            SportName = "Archery/Indoor"
                        },
                        new
                        {
                            SportTypeID = "can-ou",
                            SportName = "Canoe Sprint/Outdoor"
                        },
                        new
                        {
                            SportTypeID = "bre-in",
                            SportName = "Breakdancing/Indoor"
                        },
                        new
                        {
                            SportTypeID = "ska-ou",
                            SportName = "Skateboarding/Outdoor"
                        });
                });

            modelBuilder.Entity("DataTransfer.Models.Country", b =>
                {
                    b.HasOne("DataTransfer.Models.Games", "Games")
                        .WithMany()
                        .HasForeignKey("GamesID");

                    b.HasOne("DataTransfer.Models.SportType", "SportType")
                        .WithMany()
                        .HasForeignKey("SportTypeID");

                    b.Navigation("Games");

                    b.Navigation("SportType");
                });
#pragma warning restore 612, 618
        }
    }
}
